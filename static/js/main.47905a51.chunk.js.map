{"version":3,"sources":["components/Form.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","closeForm","openForm","handleData","e","target","name","value","setState","handleSubmit","preventDefault","task","state","data","status","onSubmit","clearForm","this","nextProps","className","type","onClick","htmlFor","id","placeholder","aria-describedby","onChange","required","Component","Search","onSearch","searchKey","Sort","by","onSort","defaultSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","bind","role","href","aria-hidden","Control","TaskItem","onUpdateStatus","onRemove","onUpdateItem","index","TaskList","onFilter","event","filterName","filterStatus","elmList","tasks","map","App","randomID","Date","now","toString","Math","random","substr","toUpperCase","showForm","isShowForm","itemUpdate","param","undefined","push","localStorage","setItem","JSON","stringify","result","findIndex","splice","forEach","filter","sort","getItem","parse","toLowerCase","indexOf","elmForm","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47905a51.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            status: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let { data } = this.props;\r\n        if (data !== null) {\r\n            this.setState({\r\n                name: data.name,\r\n                status: data.status,\r\n            });\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.data !== null) {\r\n            this.setState({\r\n                name: nextProps.data.name,\r\n                status: nextProps.data.status,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                name: \"\",\r\n                status: false,\r\n            });\r\n        }\r\n    }\r\n    closeForm = () => {\r\n        this.props.openForm();\r\n    };\r\n    handleData = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if (name === \"status\") {\r\n            value = target.value === \"true\" ? true : false;\r\n        }\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let task = this.state;\r\n        if (this.props.data !== null) {\r\n            this.props.data.name = task.name;\r\n            this.props.data.status = task.status;\r\n            this.props.onSubmit(this.props.data);\r\n        } else {\r\n            this.props.onSubmit(task);\r\n        }\r\n        this.clearForm();\r\n        this.closeForm();\r\n    };\r\n    clearForm = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            status: false,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">\r\n                        {this.props.data !== null\r\n                            ? \"Cập nhật công việc\"\r\n                            : \"Thêm  công việc\"}\r\n                    </h3>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-close\"\r\n                        onClick={this.closeForm}\r\n                    >\r\n                        <i className=\"fa fa-times\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form className=\"form-group\" onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"name\">Tên : </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"\"\r\n                            aria-describedby=\"helpId\"\r\n                            onChange={this.handleData}\r\n                            value={this.state.name}\r\n                        />\r\n                        <label className=\"mt-15\" htmlFor=\"status\">\r\n                            Trạng thái :{\" \"}\r\n                        </label>\r\n                        <select\r\n                            name=\"status\"\r\n                            id=\"status\"\r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                            value={this.state.status}\r\n                            onChange={this.handleData}\r\n                        >\r\n                            <option value={true}>Kích hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                        <div className=\"text-center mt-15\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-warning mr-10\"\r\n                            >\r\n                                <i className=\"fa fa-plus mr-10\"></i>\r\n                                Lưu lại\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={this.clearForm}\r\n                            >\r\n                                <i className=\"fa fa-times mr-10\"></i>\r\n                                Xóa bỏ\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchKey: \"\",\r\n        };\r\n    }\r\n    handleData = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n    onClick = () => {\r\n        this.props.onSearch(this.state.searchKey);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"input-group\">\r\n                <input\r\n                    name=\"searchKey\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search\"\r\n                    onChange={this.handleData}\r\n                />\r\n                <span className=\"input-group-btn\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={this.onClick}\r\n                    >\r\n                        <i className=\"mr-10 fa fa-search\"></i>\r\n                        Tìm\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Sort extends Component {\r\n    onClick = (by, value) => {\r\n        this.props.onSort({ by, value });\r\n    };\r\n    render() {\r\n        let { defaultSort } = this.props;\r\n        return (\r\n            <div className=\"dropdown\">\r\n                <button\r\n                    className=\"btn btn-primary dropdown-toggle\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenu1\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"true\"\r\n                >\r\n                    Sắp Xếp <i className=\"fa fa-sort ml-10\" />\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li onClick={this.onClick.bind(this, \"name\", 1)}>\r\n                        <a\r\n                            role=\"button\"\r\n                            href=\"#\"\r\n                            className={\r\n                                defaultSort.by === \"name\" &&\r\n                                defaultSort.value === 1\r\n                                    ? \"sort-selected\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            <i\r\n                                className=\"fa fa-sort-alpha-asc mr-10\"\r\n                                aria-hidden=\"true\"\r\n                            ></i>\r\n                            Tên A-Z\r\n                        </a>\r\n                    </li>\r\n                    <li onClick={this.onClick.bind(this, \"name\", -1)}>\r\n                        <a\r\n                            role=\"button\"\r\n                            href=\"#\"\r\n                            className={\r\n                                defaultSort.by === \"name\" &&\r\n                                defaultSort.value === -1\r\n                                    ? \"sort-selected\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            <i\r\n                                className=\"fa fa-sort-alpha-desc mr-10\"\r\n                                aria-hidden=\"true\"\r\n                            ></i>\r\n                            Tên Z-A\r\n                        </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li onClick={this.onClick.bind(this, \"status\", 1)}>\r\n                        <a\r\n                            role=\"button\"\r\n                            href=\"#\"\r\n                            className={\r\n                                defaultSort.by === \"status\" &&\r\n                                defaultSort.value === 1\r\n                                    ? \"sort-selected\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            Trạng Thái Kích Hoạt\r\n                        </a>\r\n                    </li>\r\n                    <li onClick={this.onClick.bind(this, \"status\", -1)}>\r\n                        <a\r\n                            role=\"button\"\r\n                            href=\"#\"\r\n                            className={\r\n                                defaultSort.by === \"status\" &&\r\n                                defaultSort.value === -1\r\n                                    ? \"sort-selected\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            Trạng Thái Ẩn\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-xs-6\">\r\n                    <Search onSearch={this.props.onSearch} />\r\n                </div>\r\n                <div className=\"col-xs-6\">\r\n                    <Sort\r\n                        defaultSort={this.props.defaultSort}\r\n                        onSort={this.props.onSort}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TaskItem extends Component {\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.data.id);\r\n    };\r\n    onRemove = () => {\r\n        this.props.onRemove(this.props.data.id);\r\n    };\r\n    onUpdateItem = () => {\r\n        this.props.onUpdateItem(this.props.data.id);\r\n    };\r\n    render() {\r\n        let { data, index } = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{index}</td>\r\n                <td>{data.name}</td>\r\n                <td className=\"text-center\">\r\n                    <span\r\n                        className={\r\n                            data.status\r\n                                ? \"label label-danger\"\r\n                                : \"label label-info\"\r\n                        }\r\n                        onClick={this.onUpdateStatus}\r\n                    >\r\n                        {data.status ? \"Kích hoạt\" : \"Ẩn\"}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-warning mr-10\"\r\n                        onClick={this.onUpdateItem}\r\n                    >\r\n                        <i className=\"fa fa-pencil mr-10\"></i>\r\n                        Sửa\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.onRemove}\r\n                    >\r\n                        <i className=\"fa fa-times mr-10\"></i>\r\n                        Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: \"\",\r\n            filterStatus: -1,\r\n        };\r\n    }\r\n    onFilter = (event) => {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        this.props.onFilter(\r\n            name === \"filterName\" ? value : this.state.filterName,\r\n            name === \"filterStatus\" ? value : this.state.filterStatus\r\n        );\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { filterName, filterStatus } = this.state;\r\n        let elmList = this.props.tasks.map((task, index) => {\r\n            return (\r\n                <TaskItem\r\n                    data={task}\r\n                    index={index}\r\n                    key={index}\r\n                    onUpdateStatus={this.props.onUpdateStatus}\r\n                    onRemove={this.props.onRemove}\r\n                    onUpdateItem={this.props.onUpdateItem}\r\n                />\r\n            );\r\n        });\r\n        return (\r\n            <table className=\"table table-bordered table-hover mt-15\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng thái</th>\r\n                        <th className=\"text-center\">Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"filterName\"\r\n                                value={filterName}\r\n                                onChange={this.onFilter}\r\n                            />\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                            <select\r\n                                name=\"filterStatus\"\r\n                                className=\"form-control\"\r\n                                required=\"required\"\r\n                                value={filterStatus}\r\n                                onChange={this.onFilter}\r\n                            >\r\n                                <option value={-1}>Tất cả</option>\r\n                                <option value={0}>Ẩn</option>\r\n                                <option value={1}>Kích hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {elmList}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\nimport React, { Component } from \"react\";\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShowForm: false,\n            tasks: [],\n            itemUpdate: null,\n            filter: {\n                name: \"\",\n                status: -1,\n            },\n            searchKey: \"\",\n            defaultSort: {\n                by: \"\",\n                value: 0,\n            },\n        };\n    }\n    componentDidMount() {\n        if (localStorage && localStorage.getItem(\"tasks\")) {\n            let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n            this.setState({\n                tasks: tasks,\n            });\n        }\n    }\n    randomID = () => {\n        return (\n            Date.now().toString(36) + Math.random().toString(36).substr(2, 5)\n        ).toUpperCase();\n    };\n    showForm = () => {\n        this.setState({\n            isShowForm: true,\n            itemUpdate: null,\n        });\n    };\n    closeForm = () => {\n        this.setState({\n            isShowForm: false,\n        });\n    };\n    openForm = () => {\n        this.setState({\n            isShowForm: true,\n        });\n    };\n    onSubmit = (param) => {\n        let { tasks } = this.state;\n        if (param.id === undefined) {\n            param.id = this.randomID();\n        } else {\n            this.onRemove(param.id);\n            this.setState({\n                itemUpdate: null,\n            });\n        }\n        tasks.push(param);\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        this.setState({\n            tasks: tasks,\n        });\n    };\n    onUpdateStatus = (id) => {\n        let result = this.findIndex(id);\n        let { tasks } = this.state;\n        tasks[result].status = !tasks[result].status;\n        this.setState({\n            tasks: tasks,\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    };\n    onRemove = (id) => {\n        let result = this.findIndex(id);\n        let { tasks } = this.state;\n        tasks.splice(result, 1);\n        this.setState({\n            tasks: tasks,\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    };\n    onUpdateItem = (id) => {\n        this.openForm();\n        let result = this.findIndex(id);\n        let data = this.state.tasks[result];\n        this.setState({\n            itemUpdate: data,\n        });\n    };\n    findIndex = (id) => {\n        let { tasks } = this.state;\n        let result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id) result = index;\n        });\n        return result;\n    };\n    onSearch = (data) => {\n        this.setState({\n            searchKey: data,\n        });\n    };\n    onFilter = (name, status) => {\n        this.setState({\n            filter: {\n                name: name,\n                status: status,\n            },\n        });\n    };\n    onSort = (sort) => {\n        this.setState({\n            defaultSort: {\n                by: sort.by,\n                value: sort.value,\n            },\n        });\n    };\n    render() {\n        let { isShowForm, tasks, filter, searchKey, defaultSort } = this.state;\n        if (filter) {\n            if (filter.name !== \"\") {\n                tasks = tasks.filter((task) => {\n                    return (\n                        task.name\n                            .toLowerCase()\n                            .indexOf(filter.name.toLowerCase()) !== -1\n                    );\n                });\n            }\n            tasks = tasks.filter((task) => {\n                if (+filter.status === -1) return task;\n                else return +task.status === +filter.status;\n            });\n        }\n        if (searchKey !== \"\") {\n            tasks = tasks.filter((task) => {\n                return (\n                    task.name.toLowerCase().indexOf(searchKey.toLowerCase()) !==\n                    -1\n                );\n            });\n        }\n        let elmForm = isShowForm ? (\n            <Form\n                openForm={this.closeForm}\n                onSubmit={this.onSubmit}\n                data={this.state.itemUpdate}\n            />\n        ) : (\n            \"\"\n        );\n        if (defaultSort) {\n            if (defaultSort.by === \"name\") {\n                tasks = tasks.sort((a, b) => {\n                    if (a.name > b.name) return defaultSort.value;\n                    else if (a.name < b.name) return -defaultSort.value;\n                    else return 0;\n                });\n            } else if (defaultSort.by === \"status\") {\n                tasks = tasks.sort((a, b) => {\n                    if (+a.status > +b.status) return -defaultSort.value;\n                    else if (+a.status < b.status) return defaultSort.value;\n                    else return 0;\n                });\n            }\n        }\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h1 className=\"text-center pt-15 pb-15 ml-15 mr-15 mb-20\">\n                            Quản Lý Công Việc\n                        </h1>\n                        <div className=\"col-xs-4\">{elmForm}</div>\n                        <div className={isShowForm ? \"col-xs-8\" : \"col-xs-12\"}>\n                            <div className=\"col-xs-12 mb-15\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={this.showForm}\n                                >\n                                    <i className=\"fa fa-plus mr-10\"></i>\n                                    Thêm công việc\n                                </button>\n                            </div>\n                            <Control\n                                onSearch={this.onSearch}\n                                defaultSort={defaultSort}\n                                onSort={this.onSort}\n                            />\n                            <div className=\"col-xs-12\">\n                                <TaskList\n                                    tasks={tasks}\n                                    onUpdateStatus={this.onUpdateStatus}\n                                    onRemove={this.onRemove}\n                                    onUpdateItem={this.onUpdateItem}\n                                    onFilter={this.onFilter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"app\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}